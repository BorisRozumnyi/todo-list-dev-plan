{"ast":null,"code":"var _jsxFileName = \"/home/boris/Projects/todo-list-dev-plan/src/App.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { TaskList } from './TaskList';\nimport { Modal } from './Modal';\nimport { CreateTaskForm } from './CreateTaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCreateTask = newTaskValue => {\n      const {\n        taskList\n      } = this.state;\n      const newTask = {\n        title: newTaskValue,\n        isCompleted: false,\n        id: Date.now()\n      };\n      const tasks = [...taskList, newTask];\n      this.setState({\n        taskList: tasks\n      });\n    };\n\n    this.handleRemove = id => {\n      const {\n        taskList\n      } = this.state;\n      const filtered = taskList.filter(task => task.id !== id);\n      this.setState({\n        taskList: filtered\n      });\n    };\n\n    this.handelCheck = id => {\n      const {\n        taskList\n      } = this.state;\n      const maped = taskList.map(task => {\n        if (task.id === id) task.isCompleted = !task.isCompleted;\n        return task;\n      });\n      this.setState({\n        taskList: maped\n      });\n    };\n\n    this.handleOpenEdit = id => {\n      const {\n        taskList\n      } = this.state;\n      const finded = taskList.find(task => task.id === id);\n      this.setState({\n        editingTask: finded\n      });\n    };\n\n    this.handleCloseEdit = () => {\n      this.setState({\n        editingTask: undefined\n      });\n    };\n\n    this.handleSaveEdit = value => {\n      const {\n        taskList,\n        editingTask\n      } = this.state;\n      const maped = taskList.map(task => {\n        if (task.id === (editingTask === null || editingTask === void 0 ? void 0 : editingTask.id)) task.title = value;\n        return task;\n      });\n      this.setState({\n        editingTask: undefined,\n        taskList: maped\n      });\n    };\n\n    this.state = {\n      editingTask: undefined,\n      taskList: []\n    };\n  }\n\n  render() {\n    const {\n      taskList,\n      editingTask\n    } = this.state;\n    const {\n      handleCreateTask,\n      handleOpenEdit,\n      handelCheck,\n      handleRemove,\n      handleCloseEdit,\n      handleSaveEdit\n    } = this;\n    return /*#__PURE__*/_jsxDEV(StyledApp, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreateTaskForm, {\n        save: handleCreateTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: taskList,\n        remove: handleRemove,\n        check: handelCheck,\n        openEdit: handleOpenEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), editingTask && /*#__PURE__*/_jsxDEV(Modal, {\n        task: editingTask,\n        close: handleCloseEdit,\n        save: handleSaveEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst StyledApp = styled.section`\n  padding: 0 20px;\n`;\n_c = StyledApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"StyledApp\");","map":{"version":3,"sources":["/home/boris/Projects/todo-list-dev-plan/src/App.tsx"],"names":["React","styled","TaskList","Modal","CreateTaskForm","App","Component","constructor","props","handleCreateTask","newTaskValue","taskList","state","newTask","title","isCompleted","id","Date","now","tasks","setState","handleRemove","filtered","filter","task","handelCheck","maped","map","handleOpenEdit","finded","find","editingTask","handleCloseEdit","undefined","handleSaveEdit","value","render","StyledApp","section"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { TaskList } from './TaskList';\nimport { Modal } from './Modal';\nimport { CreateTaskForm } from './CreateTaskForm';\n\nexport type TTask = {\n  title: string;\n  isCompleted: boolean;\n  id: number;\n};\nexport type TRemove = {\n  remove: (id: number) => void;\n};\n\ntype Props = { test: boolean };\ntype State = { editingTask?: TTask; taskList: TTask[] };\n\nexport class App extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      editingTask: undefined,\n      taskList: [],\n    };\n  }\n\n  handleCreateTask = (newTaskValue: string) => {\n    const { taskList } = this.state;\n    const newTask = {\n      title: newTaskValue,\n      isCompleted: false,\n      id: Date.now(),\n    };\n    const tasks = [...taskList, newTask];\n    this.setState({ taskList: tasks });\n  };\n\n  handleRemove = (id: number) => {\n    const { taskList } = this.state;\n    const filtered = taskList.filter((task) => task.id !== id);\n    this.setState({ taskList: filtered });\n  };\n\n  handelCheck = (id: number) => {\n    const { taskList } = this.state;\n    const maped = taskList.map((task) => {\n      if (task.id === id) task.isCompleted = !task.isCompleted;\n      return task;\n    });\n    this.setState({ taskList: maped });\n  };\n\n  handleOpenEdit = (id: number) => {\n    const { taskList } = this.state;\n    const finded = taskList.find((task) => task.id === id);\n    this.setState({ editingTask: finded });\n  };\n\n  handleCloseEdit = () => {\n    this.setState({ editingTask: undefined });\n  };\n\n  handleSaveEdit = (value: string) => {\n    const { taskList, editingTask } = this.state;\n    const maped = taskList.map((task) => {\n      if (task.id === editingTask?.id) task.title = value;\n      return task;\n    });\n    this.setState({ editingTask: undefined, taskList: maped });\n  };\n\n  render() {\n    const { taskList, editingTask } = this.state;\n    const {\n      handleCreateTask,\n      handleOpenEdit,\n      handelCheck,\n      handleRemove,\n      handleCloseEdit,\n      handleSaveEdit,\n    } = this;\n    return (\n      <StyledApp>\n        <h1>Todo List</h1>\n        <CreateTaskForm save={handleCreateTask} />\n        <TaskList\n          tasks={taskList}\n          remove={handleRemove}\n          check={handelCheck}\n          openEdit={handleOpenEdit}\n        />\n        {editingTask && (\n          <Modal\n            task={editingTask}\n            close={handleCloseEdit}\n            save={handleSaveEdit}\n          />\n        )}\n      </StyledApp>\n    );\n  }\n}\n\nconst StyledApp = styled.section`\n  padding: 0 20px;\n`;\n"]},"metadata":{},"sourceType":"module"}