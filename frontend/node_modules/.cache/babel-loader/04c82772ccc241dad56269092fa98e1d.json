{"ast":null,"code":"var _jsxFileName = \"/home/boris/Projects/todo-list-dev-plan/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { TaskList } from './TaskList';\nimport { Modal } from './Modal';\nimport { CreateTaskForm } from './CreateTaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrls = {\n  todos: 'http://localhost:1337/todos'\n};\nexport const App = () => {\n  _s();\n\n  const [editingTask, setEditingTask] = useState(undefined);\n  const [taskList, setTaskList] = useState([]);\n  useEffect(() => {\n    axios.get(apiUrls.todos).then(response => {\n      setTaskList(response.data);\n    });\n  }, []);\n\n  const handleCreateTask = newTaskValue => {\n    const newTask = {\n      title: newTaskValue,\n      isCompleted: false\n    };\n    axios.post(apiUrls.todos, newTask).then(response => {\n      const tasks = [...taskList, response.data];\n      setTaskList(tasks);\n    });\n  };\n\n  const handleRemove = id => {\n    axios.delete(`${apiUrls.todos}/${id}`).then(response => {\n      const copyTodos = taskList.slice();\n      const findedIndex = copyTodos.findIndex(todo => todo.id === response.data.id);\n      copyTodos.splice(findedIndex, 1);\n      setTaskList(copyTodos);\n    });\n  };\n\n  const handleCheck = id => {\n    const maped = taskList.map(task => {\n      if (task.id === id) task.isCompleted = !task.isCompleted;\n      return task;\n    });\n    setTaskList(maped);\n  };\n\n  const handleOpenEdit = id => {\n    const finded = taskList.find(task => task.id === id);\n    setEditingTask(finded);\n  };\n\n  const handleCloseEdit = () => {\n    setEditingTask(undefined);\n  };\n\n  const handleSaveEdit = value => {\n    setEditingTask(undefined);\n    axios.put(`${apiUrls.todos}/${editingTask === null || editingTask === void 0 ? void 0 : editingTask.id}`, {\n      title: value\n    }).then(response => {\n      const copyTodos = taskList.slice();\n      const findedIndex = copyTodos.findIndex(todo => todo.id === response.data.id);\n      copyTodos.splice(findedIndex, 1, response.data);\n      console.log(copyTodos);\n      setTaskList(copyTodos);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledApp, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTaskForm, {\n      save: handleCreateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: taskList,\n      remove: handleRemove,\n      check: handleCheck,\n      openEdit: handleOpenEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), editingTask && /*#__PURE__*/_jsxDEV(Modal, {\n      task: editingTask,\n      close: handleCloseEdit,\n      save: handleSaveEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"mbJmuOyulxG4EWZsMD80MkKlVSo=\");\n\n_c = App;\nconst StyledApp = styled.section`\n  padding: 0 20px;\n`;\n_c2 = StyledApp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"StyledApp\");","map":{"version":3,"sources":["/home/boris/Projects/todo-list-dev-plan/src/App.tsx"],"names":["React","useEffect","useState","axios","styled","TaskList","Modal","CreateTaskForm","apiUrls","todos","App","editingTask","setEditingTask","undefined","taskList","setTaskList","get","then","response","data","handleCreateTask","newTaskValue","newTask","title","isCompleted","post","tasks","handleRemove","id","delete","copyTodos","slice","findedIndex","findIndex","todo","splice","handleCheck","maped","map","task","handleOpenEdit","finded","find","handleCloseEdit","handleSaveEdit","value","put","console","log","StyledApp","section"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { TaskList } from './TaskList';\nimport { Modal } from './Modal';\nimport { CreateTaskForm } from './CreateTaskForm';\n\nconst apiUrls = {\n  todos: 'http://localhost:1337/todos',\n};\n\nexport type TTask = {\n  title: string;\n  isCompleted: boolean;\n  id: number;\n};\n\ntype Props = { test: boolean };\n\nexport const App: React.FC<Props> = () => {\n  const [editingTask, setEditingTask] = useState<TTask | undefined>(undefined);\n  const [taskList, setTaskList] = useState([] as TTask[]);\n\n  useEffect(() => {\n    axios.get(apiUrls.todos).then((response) => {\n      setTaskList(response.data);\n    });\n  }, []);\n\n  const handleCreateTask = (newTaskValue: string) => {\n    const newTask = {\n      title: newTaskValue,\n      isCompleted: false,\n    };\n\n    axios.post(apiUrls.todos, newTask).then((response) => {\n      const tasks = [...taskList, response.data];\n      setTaskList(tasks);\n    });\n  };\n\n  const handleRemove = (id: number) => {\n    axios.delete(`${apiUrls.todos}/${id}`).then((response) => {\n      const copyTodos = taskList.slice();\n      const findedIndex = copyTodos.findIndex(\n        (todo) => todo.id === response.data.id,\n      );\n      copyTodos.splice(findedIndex, 1);\n      setTaskList(copyTodos);\n    });\n  };\n\n  const handleCheck = (id: number) => {\n    const maped = taskList.map((task) => {\n      if (task.id === id) task.isCompleted = !task.isCompleted;\n      return task;\n    });\n    setTaskList(maped);\n  };\n\n  const handleOpenEdit = (id: number) => {\n    const finded = taskList.find((task) => task.id === id);\n    setEditingTask(finded);\n  };\n\n  const handleCloseEdit = () => {\n    setEditingTask(undefined);\n  };\n\n  const handleSaveEdit = (value: string) => {\n    setEditingTask(undefined);\n    axios\n      .put(`${apiUrls.todos}/${editingTask?.id}`, {\n        title: value,\n      })\n      .then((response) => {\n        const copyTodos = taskList.slice();\n        const findedIndex = copyTodos.findIndex(\n          (todo) => todo.id === response.data.id,\n        );\n        copyTodos.splice(findedIndex, 1, response.data);\n        console.log(copyTodos);\n        setTaskList(copyTodos);\n      });\n  };\n\n  return (\n    <StyledApp>\n      <h1>Todo List</h1>\n      <CreateTaskForm save={handleCreateTask} />\n      <TaskList\n        tasks={taskList}\n        remove={handleRemove}\n        check={handleCheck}\n        openEdit={handleOpenEdit}\n      />\n      {editingTask && (\n        <Modal\n          task={editingTask}\n          close={handleCloseEdit}\n          save={handleSaveEdit}\n        />\n      )}\n    </StyledApp>\n  );\n};\n\nconst StyledApp = styled.section`\n  padding: 0 20px;\n`;\n"]},"metadata":{},"sourceType":"module"}