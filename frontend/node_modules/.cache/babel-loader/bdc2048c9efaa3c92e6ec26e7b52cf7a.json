{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/frontend/src/Modal.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useClickOutsede = (ref, close) => {\n  _s();\n\n  useEffect(() => {\n    const handleClickOutside = e => {\n      var _ref$current;\n\n      const target = e.target;\n      if (ref && !((_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.contains(target))) close();\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [ref]);\n};\n\n_s(useClickOutsede, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport const Modal = ({\n  task,\n  close,\n  save\n}) => {\n  _s2();\n\n  const [newTaskValue, setNewTaskValue] = useState('');\n  const wrapperRef = useRef(null);\n  useClickOutsede(wrapperRef, close);\n\n  const handleChange = e => {\n    const {\n      value\n    } = e.currentTarget;\n    setNewTaskValue(value);\n  };\n\n  const handleKeyDownEnter = e => {\n    if (e.key === 'Enter') save(newTaskValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledModal, {\n    ref: wrapperRef,\n    \"data-testid\": \"edit-modal\",\n    children: [/*#__PURE__*/_jsxDEV(Close, {\n      \"data-testid\": \"close-edit-modal\",\n      onClick: close,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"edit-input\",\n      defaultValue: task.title,\n      onChange: handleChange,\n      autoFocus: true,\n      onKeyDown: handleKeyDownEnter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Save, {\n      onClick: () => save(newTaskValue),\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Modal, \"0fni47WIsvjZb2i+ommeJ6rZOt0=\", false, function () {\n  return [useClickOutsede];\n});\n\n_c = Modal;\nconst StyledModal = styled.div`\n  position: fixed;\n  top: 30%;\n  left: calc(50% - 150px);\n  width: 300px;\n  border: 1px solid;\n  background: #edf;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c2 = StyledModal;\nconst Close = styled.button`\n  position: absolute;\n  top: 3px;\n  right: 3px;\n`;\n_c3 = Close;\nconst Save = styled.button`\n  margin-top: 3px;\n`;\n_c4 = Save;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"StyledModal\");\n$RefreshReg$(_c3, \"Close\");\n$RefreshReg$(_c4, \"Save\");","map":{"version":3,"sources":["/usr/src/app/frontend/src/Modal.tsx"],"names":["React","useEffect","useRef","useState","styled","useClickOutsede","ref","close","handleClickOutside","e","target","current","contains","document","addEventListener","removeEventListener","Modal","task","save","newTaskValue","setNewTaskValue","wrapperRef","handleChange","value","currentTarget","handleKeyDownEnter","key","title","StyledModal","div","Close","button","Save"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AASA,MAAMC,eAAe,GAAG,CACtBC,GADsB,EAEtBC,KAFsB,KAGnB;AAAA;;AACHN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,kBAAkB,GAAIC,CAAD,IAAmB;AAAA;;AAC5C,YAAMC,MAAM,GAAGD,CAAC,CAACC,MAAjB;AACA,UAAIJ,GAAG,IAAI,kBAACA,GAAG,CAACK,OAAL,iDAAC,aAAaC,QAAb,CAAsBF,MAAtB,CAAD,CAAX,EAA2CH,KAAK;AACjD,KAHD;;AAIAM,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCN,kBAAvC;AACA,WAAO,MAAMK,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CP,kBAA1C,CAAb;AACD,GAPQ,EAON,CAACF,GAAD,CAPM,CAAT;AAQD,CAZD;;GAAMD,e;;AAcN,OAAO,MAAMW,KAAsB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQV,EAAAA,KAAR;AAAeW,EAAAA;AAAf,CAAD,KAA2B;AAAA;;AAC/D,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMkB,UAAU,GAAGnB,MAAM,CAAC,IAAD,CAAzB;AACAG,EAAAA,eAAe,CAACgB,UAAD,EAAad,KAAb,CAAf;;AACA,QAAMe,YAAY,GAAIb,CAAD,IAA0C;AAC7D,UAAM;AAAEc,MAAAA;AAAF,QAAYd,CAAC,CAACe,aAApB;AACAJ,IAAAA,eAAe,CAACG,KAAD,CAAf;AACD,GAHD;;AAKA,QAAME,kBAAkB,GAAIhB,CAAD,IAA8C;AACvE,QAAIA,CAAC,CAACiB,GAAF,KAAU,OAAd,EAAuBR,IAAI,CAACC,YAAD,CAAJ;AACxB,GAFD;;AAIA,sBACE,QAAC,WAAD;AAAa,IAAA,GAAG,EAAEE,UAAlB;AAA8B,mBAAY,YAA1C;AAAA,4BACE,QAAC,KAAD;AAAO,qBAAY,kBAAnB;AAAsC,MAAA,OAAO,EAAEd,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,qBAAY,YAFd;AAGE,MAAA,YAAY,EAAEU,IAAI,CAACU,KAHrB;AAIE,MAAA,QAAQ,EAAEL,YAJZ;AAKE,MAAA,SAAS,MALX;AAME,MAAA,SAAS,EAAEG;AANb;AAAA;AAAA;AAAA;AAAA,YALF,eAaE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAE,MAAMP,IAAI,CAACC,YAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA/BM;;IAAMH,K;UAIXX,e;;;KAJWW,K;AAiCb,MAAMY,WAAW,GAAGxB,MAAM,CAACyB,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMD,W;AAaN,MAAME,KAAK,GAAG1B,MAAM,CAAC2B,MAAO;AAC5B;AACA;AACA;AACA,CAJA;MAAMD,K;AAKN,MAAME,IAAI,GAAG5B,MAAM,CAAC2B,MAAO;AAC3B;AACA,CAFA;MAAMC,I","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { TTask } from './App';\n\ntype Props = {\n  task: TTask;\n  close: () => void;\n  save: (v: string) => void;\n};\n\nconst useClickOutsede = (\n  ref: React.RefObject<HTMLInputElement>,\n  close: () => void,\n) => {\n  useEffect(() => {\n    const handleClickOutside = (e: MouseEvent) => {\n      const target = e.target as HTMLDivElement;\n      if (ref && !ref.current?.contains(target)) close();\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [ref]);\n};\n\nexport const Modal: React.FC<Props> = ({ task, close, save }) => {\n  const [newTaskValue, setNewTaskValue] = useState('');\n\n  const wrapperRef = useRef(null);\n  useClickOutsede(wrapperRef, close);\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    setNewTaskValue(value);\n  };\n\n  const handleKeyDownEnter = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') save(newTaskValue);\n  };\n\n  return (\n    <StyledModal ref={wrapperRef} data-testid=\"edit-modal\">\n      <Close data-testid=\"close-edit-modal\" onClick={close}>\n        x\n      </Close>\n      <h2>Edit todo</h2>\n      <input\n        type=\"text\"\n        data-testid=\"edit-input\"\n        defaultValue={task.title}\n        onChange={handleChange}\n        autoFocus\n        onKeyDown={handleKeyDownEnter}\n      />\n      <Save onClick={() => save(newTaskValue)}>Save</Save>\n    </StyledModal>\n  );\n};\n\nconst StyledModal = styled.div`\n  position: fixed;\n  top: 30%;\n  left: calc(50% - 150px);\n  width: 300px;\n  border: 1px solid;\n  background: #edf;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Close = styled.button`\n  position: absolute;\n  top: 3px;\n  right: 3px;\n`;\nconst Save = styled.button`\n  margin-top: 3px;\n`;\n"]},"metadata":{},"sourceType":"module"}