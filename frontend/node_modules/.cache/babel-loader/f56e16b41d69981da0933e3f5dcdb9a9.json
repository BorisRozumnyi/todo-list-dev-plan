{"ast":null,"code":"var _jsxFileName = \"/home/boris/Projects/todo-list-dev-plan/src/Modal.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Modal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.wrapperRef = /*#__PURE__*/React.createRef();\n\n    this.handleChange = e => {\n      const {\n        value\n      } = e.currentTarget;\n      this.setState({\n        newTaskValue: value\n      });\n    };\n\n    this.handleClickOutside = e => {\n      var _this$wrapperRef$curr;\n\n      if (this.wrapperRef && !((_this$wrapperRef$curr = this.wrapperRef.current) === null || _this$wrapperRef$curr === void 0 ? void 0 : _this$wrapperRef$curr.contains(e.target))) {\n        this.props.close();\n      }\n    };\n\n    this.handleKeyDownEnter = e => {\n      const {\n        newTaskValue\n      } = this.state;\n      const {\n        save\n      } = this.props;\n      if (e.key === 'Enter') save(newTaskValue);\n    };\n\n    this.state = {\n      newTaskValue: ''\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  render() {\n    const {\n      task,\n      close,\n      save\n    } = this.props;\n    const {\n      newTaskValue\n    } = this.state;\n    const {\n      handleChange,\n      handleKeyDownEnter\n    } = this;\n    return /*#__PURE__*/_jsxDEV(StyledModal, {\n      ref: this.wrapperRef,\n      \"data-testid\": \"edit-modal\",\n      children: [/*#__PURE__*/_jsxDEV(Close, {\n        \"data-testid\": \"close-edit-modal\",\n        onClick: close,\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        \"data-testid\": \"edit-input\",\n        defaultValue: task.title,\n        onChange: handleChange,\n        autoFocus: true,\n        onKeyDown: handleKeyDownEnter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Save, {\n        onClick: () => save(newTaskValue),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst StyledModal = styled.div`\n  position: fixed;\n  top: 30%;\n  left: calc(50% - 150px);\n  width: 300px;\n  border: 1px solid;\n  background: #edf;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c = StyledModal;\nconst Close = styled.button`\n  position: absolute;\n  top: 3px;\n  right: 3px;\n`;\n_c2 = Close;\nconst Save = styled.button`\n  margin-top: 3px;\n`;\n_c3 = Save;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledModal\");\n$RefreshReg$(_c2, \"Close\");\n$RefreshReg$(_c3, \"Save\");","map":{"version":3,"sources":["/home/boris/Projects/todo-list-dev-plan/src/Modal.tsx"],"names":["React","styled","Modal","Component","constructor","props","wrapperRef","createRef","handleChange","e","value","currentTarget","setState","newTaskValue","handleClickOutside","current","contains","target","close","handleKeyDownEnter","state","save","key","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","task","title","StyledModal","div","Close","button","Save"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { TTask } from './App';\n\ntype Props = {\n  task: TTask;\n  close: () => void;\n  save: (v: string) => void;\n};\n\ntype TState = { newTaskValue: string };\nexport class Modal extends React.Component<Props, TState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      newTaskValue: '',\n    };\n  }\n\n  private wrapperRef = React.createRef<HTMLDivElement>();\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    this.setState({ newTaskValue: value });\n  };\n\n  handleClickOutside = (e: any) => {\n    if (this.wrapperRef && !this.wrapperRef.current?.contains(e.target)) {\n      this.props.close();\n    }\n  };\n\n  handleKeyDownEnter = (e: any) => {\n    const { newTaskValue } = this.state;\n    const { save } = this.props;\n    if (e.key === 'Enter') save(newTaskValue);\n  };\n\n  render() {\n    const { task, close, save } = this.props;\n    const { newTaskValue } = this.state;\n    const { handleChange, handleKeyDownEnter } = this;\n    return (\n      <StyledModal ref={this.wrapperRef} data-testid=\"edit-modal\">\n        <Close data-testid=\"close-edit-modal\" onClick={close}>\n          x\n        </Close>\n        <h2>Edit todo</h2>\n        <input\n          type=\"text\"\n          data-testid=\"edit-input\"\n          defaultValue={task.title}\n          onChange={handleChange}\n          autoFocus\n          onKeyDown={handleKeyDownEnter}\n        />\n        <Save onClick={() => save(newTaskValue)}>Save</Save>\n      </StyledModal>\n    );\n  }\n}\n\nconst StyledModal = styled.div`\n  position: fixed;\n  top: 30%;\n  left: calc(50% - 150px);\n  width: 300px;\n  border: 1px solid;\n  background: #edf;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Close = styled.button`\n  position: absolute;\n  top: 3px;\n  right: 3px;\n`;\nconst Save = styled.button`\n  margin-top: 3px;\n`;\n"]},"metadata":{},"sourceType":"module"}